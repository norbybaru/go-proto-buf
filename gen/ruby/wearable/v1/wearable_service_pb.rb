# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: wearable/v1/wearable_service.proto

require 'google/protobuf'


descriptor_data = "\n\"wearable/v1/wearable_service.proto\x12\x0bwearable.v1\"+\n\x15\x42\x65\x61tsPerMinuteRequest\x12\x12\n\x04uuid\x18\x01 \x01(\tR\x04uuid\"F\n\x16\x42\x65\x61tsPerMinuteResponse\x12\x14\n\x05value\x18\x01 \x01(\rR\x05value\x12\x16\n\x06minute\x18\x02 \x01(\rR\x06minute2p\n\x0fWearableService\x12]\n\x0e\x42\x65\x61tsPerMinute\x12\".wearable.v1.BeatsPerMinuteRequest\x1a#.wearable.v1.BeatsPerMinuteResponse\"\x00\x30\x01\x42>Z<github.com/norbybaru/go-proto-buf/gren/go/user/v1;wearablepbb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Wearable
  module V1
    BeatsPerMinuteRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("wearable.v1.BeatsPerMinuteRequest").msgclass
    BeatsPerMinuteResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("wearable.v1.BeatsPerMinuteResponse").msgclass
  end
end
